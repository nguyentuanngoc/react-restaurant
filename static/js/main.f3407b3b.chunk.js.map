{"version":3,"sources":["Homepage/menu-icon.js","Homepage/logo.js","Homepage/book-button.js","Homepage/menu-bar.js","Homepage/homepage.js","Food/food.js","Wine/wine.js","Book/book.js","About/about.js","App.js","serviceWorker.js","index.js"],"names":["MenuIcon","react_default","a","createElement","className","Component","Logo","BookButton","MenuBar","HomePage","menu_icon_MenuIcon","menu_bar_MenuBar","logo_Logo","book_button_BookButton","src","alt","FoodGallery","foodList","food","map","key","name","image","price","Food","WineGallery","wineList","wine","Wine","Book","About","App","homepage_HomePage","food_Food","wine_Wine","book_Book","about_About","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3407b3b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './homepage.scss'\n\nexport default class MenuIcon extends Component {\n  render() {\n    return (\n      <div className=\"menu-icon\">\n        <div className=\"menu-line\"></div>\n        <div className=\"menu-line\"></div>\n        <div className=\"menu-line\"></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './homepage.scss';\n\nexport default class Logo extends Component {\n  render() {\n    return (\n      <div className=\"logo\">\n        <span className=\"logo-text\">Restaurant</span>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './homepage.scss';\n\nexport default class BookButton extends Component {\n  render() {\n    return (\n        <button className=\"book\">Book now</button>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './homepage.scss';\n\nexport default class MenuBar extends Component {\n  render() {\n    return (\n      <ul className=\"menu-list\">\n        <li><button>Home</button></li>\n        <li><button>Food</button></li>\n        <li><button>Wine</button></li>\n        <li><button>Book</button></li>\n        <li><button>About</button></li>\n      </ul>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './homepage.scss';\nimport MenuIcon from './menu-icon';\nimport Logo from './logo';\nimport BookButton from './book-button';\nimport MenuBar from './menu-bar';\n\nexport default class HomePage extends Component {\n  render() {\n    return (\n      <div className=\"homepage\">\n        <MenuIcon />  \n        <MenuBar />\n        <Logo />\n        <BookButton />\n        <img src=\"/images/homepage.jpeg\" alt=\"homepage\"></img>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './food.scss';\nimport { food } from '../mock-data.json';\n\nfunction FoodGallery() {\n    const foodList = food.map((food) => \n      <li className=\"food\" key={food.name}>\n        <img className=\"food-image\" src={food.image} alt=\"Food\"></img>\n        <span className=\"food-name\">{food.name}</span>\n        <span className=\"food-price\">{food.price}</span>\n      </li>\n    );\n    return <ul className=\"food-gallery\">{foodList}</ul>;\n}\n\nexport default class Food extends Component {\n  render() {\n    return (\n      <div className=\"food-section\">\n        <h1>Food</h1>\n        <FoodGallery />\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport './wine.scss';\nimport { wine } from '../mock-data.json'\n\nfunction WineGallery() {\n    const wineList = wine.map((wine) => \n      <li className=\"wine\" key={wine.name}>\n        <img className=\"wine-image\" src={wine.image} alt=\"Wine\"></img>\n        <span className=\"wine-name\">{wine.name}</span>\n        <span className=\"wine-price\">{wine.price}</span>\n      </li>\n    );\n    return <ul className=\"wine-gallery\">{wineList}</ul>;\n}\nexport default class Wine extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Wine</h1>\n        <WineGallery />\n      </div>\n    )\n  }\n}\n\n\n","import React, { Component } from 'react'\n\nexport default class Book extends Component {\n  render() {\n    return (\n      <div>\n        book\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        about\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './Homepage/homepage';\nimport Food from './Food/food';\nimport Wine from './Wine/wine';\nimport Book from './Book/book';\nimport About from './About/about';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <HomePage />\n        <Food />\n        <Wine />\n        <Book />\n        <About />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}